%% System Parameters

P_rf_gen_dBm = 0;
Ibias_A = linspace(-30, 30, 61).*1e-3;

P_rf_gen = cvrt(P_rf_gen_dBm, 'dBm', 'W');
Vgen = sqrt(P_rf_gen*200);

l_phys = 0.5;
C_ = 121e-12;
L0 = 900e-9;
q = 0.190;

f1 = 10e9;
ZL = 50;
Zsrc = 50;

Iac_conv = 1e-4;
conv_param1 = 0.5; % 0 = don't change guess, 1 = use new result as guess
conv_param2 = 0.75; % How much to reduce conv_param1 when conversion fails


%% Get measured data

load(dataset_path("DS5_FinePower_PO-1.mat"));

iv_conv = 9.5e-3; % A/V
c = struct('SG_power', -10);
c.Vnorm = 2e-3;
c.SG_power = P_rf_gen_dBm;

% Calculate harmonics over bias sweep
[harms, norm, Vdcs] = getHarmonicSweep(ld, c);
fund = harms.h1;
h2 = harms.h2;
Ibias = Vdcs.*iv_conv;

lw = 1.5;
mks = 10;

figure(1);
hold off;
plot(Vdcs.*iv_conv.*1e3, VNA2dBm(abs(harms.h1)), 'LineStyle', ':', 'LineWidth', lw, 'Marker', '+', 'Color', [0, 0, .7], 'MarkerSize', mks);
hold on;
plot(Vdcs.*iv_conv.*1e3, VNA2dBm(abs(harms.h2)), 'LineStyle', '--', 'LineWidth', lw, 'Marker', '*', 'Color', [0, 0.7, 0], 'MarkerSize', mks);
plot(Vdcs.*iv_conv.*1e3, VNA2dBm(abs(harms.h3)), 'LineStyle', '-.', 'LineWidth', lw, 'Marker', 'o', 'Color', [0.7, 0, 0], 'MarkerSize', mks);
grid on;
legend("Fundamental");
xlabel("DC Bias Current (mA)");
ylabel("Harmonic Power (dBm)");

%% Basic Inductor Voltage Model

I0 = 
omega = 


V_f1 = L0.*I0.*omega.*( 1 + Idc.^2./q.^2 + I0.^2./2./q.^2 );
V_f2 = L0




































